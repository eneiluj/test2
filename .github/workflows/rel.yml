on:
  push:
    # Sequence of patterns matched against refs/tags
    branches: [master]

name: Upload Release Asset

jobs:
  build:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build project # This would actually build your project, using zip for an example artifact
        run: |
          echo show '!!!!' BRANCH
          git branch
          echo taggggg2
          tag=$(git tag -l --points-at HEAD)
          echo CURRENT TAG IS '"'${tag}'"' '!!!'
          echo 'show github.ref '
          echo ${{ github.ref }}
          echo $STORE_SECRET > sec
          cd /tmp
          git clone https://github.com/eneiluj/test2
          cd test2
          echo "tatata"
          tag=$(git tag -l --points-at HEAD)
          echo CURRENT TAG IS '"'${tag}'"' '!!!'
          #tar czvf rel.tar.gz plop sec
        env:
          STORE_SECRET: ${{ secrets.STORE_SECRET }}
      #- name: Create Release
      #  if: success()
      #  id: create_release
      #  uses: actions/create-release@v1
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #  with:
      #    tag_name: ${{ github.ref }}
      #    release_name: ${{ github.ref }}
      #    draft: false
      #    prerelease: false
      #- name: Upload Release Asset
      #  if: success()
      #  id: upload-release-asset
      #  uses: actions/upload-release-asset@v1
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #  with:
      #    upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
      #    asset_path: ./rel.tar.gz
      #    asset_name: rel.tar.gz
      #    asset_content_type: application/gzip
